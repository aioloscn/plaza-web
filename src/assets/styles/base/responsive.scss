// 响应式断点
$breakpoints: (
  xs: 320px,
  sm: 375px,
  md: 414px,
  lg: 768px,
  xl: 1024px
);

// 媒体查询混合器
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}";
  }
}

// 移动端优先的媒体查询
@mixin mobile-first($size) {
  @media (min-width: $size) {
    @content;
  }
}

// 桌面端优先的媒体查询
@mixin desktop-first($size) {
  @media (max-width: $size - 1px) {
    @content;
  }
}

// 安全区域适配（刘海屏）
@mixin safe-area-padding($direction: 'all') {
  @if $direction == 'all' {
    padding-top: constant(safe-area-inset-top);
    padding-right: constant(safe-area-inset-right);
    padding-bottom: constant(safe-area-inset-bottom);
    padding-left: constant(safe-area-inset-left);
    
    padding-top: env(safe-area-inset-top);
    padding-right: env(safe-area-inset-right);
    padding-bottom: env(safe-area-inset-bottom);
    padding-left: env(safe-area-inset-left);
  } @else if $direction == 'top' {
    padding-top: constant(safe-area-inset-top);
    padding-top: env(safe-area-inset-top);
  } @else if $direction == 'bottom' {
    padding-bottom: constant(safe-area-inset-bottom);
    padding-bottom: env(safe-area-inset-bottom);
  }
}

// 1px边框解决方案
@mixin border-1px($color: #e5e5e5, $direction: 'all') {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 200%;
    height: 200%;
    transform: scale(0.5);
    transform-origin: 0 0;
    box-sizing: border-box;
    pointer-events: none;
    
    @if $direction == 'all' {
      border: 1px solid $color;
    } @else if $direction == 'top' {
      border-top: 1px solid $color;
    } @else if $direction == 'bottom' {
      border-bottom: 1px solid $color;
    } @else if $direction == 'left' {
      border-left: 1px solid $color;
    } @else if $direction == 'right' {
      border-right: 1px solid $color;
    }
  }
}

// 响应式字体大小
@mixin responsive-font($min-size, $max-size, $min-width: 320px, $max-width: 768px) {
  font-size: $min-size;
  
  @media (min-width: $min-width) and (max-width: $max-width) {
    font-size: calc(#{$min-size} + (#{strip-unit($max-size)} - #{strip-unit($min-size)}) * ((100vw - #{$min-width}) / (#{strip-unit($max-width)} - #{strip-unit($min-width)})));
  }
  
  @media (min-width: $max-width) {
    font-size: $max-size;
  }
}

// 移除单位
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

// 工具类
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 15px;
  
  @include respond-to(md) {
    padding: 0 20px;
  }
  
  @include respond-to(lg) {
    padding: 0 30px;
  }
}

// 隐藏/显示工具类
.hidden-xs {
  @include desktop-first(576px) {
    display: none !important;
  }
}

.hidden-sm {
  @include mobile-first(576px) {
    @include desktop-first(768px) {
      display: none !important;
    }
  }
}

.hidden-md {
  @include mobile-first(768px) {
    @include desktop-first(992px) {
      display: none !important;
    }
  }
}

.visible-xs {
  @include mobile-first(576px) {
    display: none !important;
  }
}

.visible-sm {
  display: none !important;
  
  @include mobile-first(576px) {
    @include desktop-first(768px) {
      display: block !important;
    }
  }
}

// 安全区域工具类
.safe-area-top {
  @include safe-area-padding('top');
}

.safe-area-bottom {
  @include safe-area-padding('bottom');
}

.safe-area-all {
  @include safe-area-padding('all');
}